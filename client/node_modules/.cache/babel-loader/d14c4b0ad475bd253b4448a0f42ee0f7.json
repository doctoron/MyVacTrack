{"ast":null,"code":"import _objectWithoutProperties from \"/Users/ranton/bootcamp/sandbox/React_Projects/VacTRACK/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/ranton/bootcamp/sandbox/React_Projects/VacTRACK/client/src/components/Auth/PrivateRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nvar PrivateRoute = function PrivateRoute(_ref) {\n  var Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: function render(props) {\n      return isAuthenticated === true ? React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      })) : React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }));\n}; // const requestAuth = {\n//   isAuthenticated: false,\n//   authenticate(cb) {\n//     this.isAuthenticated = true;\n//     setTimeout(cb, 100); // fake async\n//   },\n//   signout(cb) {\n//     this.isAuthenticated = false;\n//     setTimeout(cb, 100);\n//   }\n// };\n// const AuthButton = withRouter(\n//   ({ history }) =>\n//     requestAuth.isAuthenticated ? (\n//       <p>\n//         Welcome To Your Comprehensive, One-Stop Vaccination Tracker by VacTRACK!{\" \"}\n//         <button\n//           onClick={() => {\n//             requestAuth.signout(() => history.push(\"/\"));\n//           }}\n//         >\n//           Sign out\n//         </button>\n//       </p>\n//     ) : (\n//       <p>You are not logged in. Please Register First.</p>\n//     )\n// );\n// function PrivateRoute({ component: Component, ...rest }) {\n//   return (\n//     <Route\n//       {...rest}\n//       render={props =>\n//         requestAuth.isAuthenticated ? (\n//           <Component {...props} />\n//         ) : (\n//           <Redirect\n//             to={{\n//               pathname: \"/login\",\n//               state: { from: props.location }\n//             }}\n//           />\n//         )\n//       }\n//     />\n//   );\n// }\n// function Public() {\n//   return <h3>Public</h3>;\n// }\n// function Protected() {\n//   return <h3>Protected</h3>;\n// }\n// class Login extends Component {\n//   state = { redirectToReferrer: false };\n//   login = () => {\n//     requestAuth.authenticate(() => {\n//       this.setState({ redirectToReferrer: true });\n//     });\n//   };\n//   render() {\n//     let { from } = this.props.location.state || { from: { pathname: \"/\" } };\n//     let { redirectToReferrer } = this.state;\n//     if (redirectToReferrer) return <Redirect to={from} />;\n//     return (\n//       <div>\n//         <p>You must log in to view the page at {from.pathname}</p>\n//         <button onClick={this.login}>Log in</button>\n//       </div>\n//     );\n//   }\n// }\n\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/ranton/bootcamp/sandbox/React_Projects/VacTRACK/client/src/components/Auth/PrivateRoute.js"],"names":["React","Route","Redirect","PrivateRoute","Component","component","rest","props","isAuthenticated"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,KADF,EAEEC,QAFF,QAGO,kBAHP;;AAKA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,MAAcC,SAAd,QAAGC,SAAH;AAAA,MAA4BC,IAA5B;;AAAA,SACnB,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,IAAA,MAAM,EAAE,gBAACC,KAAD;AAAA,aACvBC,eAAe,KAAK,IAApB,GACI,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,GAEI,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHmB;AAAA,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADmB;AAAA,CAArB,C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeJ,YAAf","sourcesContent":["import React from \"react\";\nimport {\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={(props) => (\n    isAuthenticated === true\n      ? <Component {...props} />\n      : <Redirect to='/login' />\n  )} />\n);\n\n// const requestAuth = {\n//   isAuthenticated: false,\n//   authenticate(cb) {\n//     this.isAuthenticated = true;\n//     setTimeout(cb, 100); // fake async\n//   },\n//   signout(cb) {\n//     this.isAuthenticated = false;\n//     setTimeout(cb, 100);\n//   }\n// };\n\n// const AuthButton = withRouter(\n//   ({ history }) =>\n//     requestAuth.isAuthenticated ? (\n//       <p>\n//         Welcome To Your Comprehensive, One-Stop Vaccination Tracker by VacTRACK!{\" \"}\n//         <button\n//           onClick={() => {\n//             requestAuth.signout(() => history.push(\"/\"));\n//           }}\n//         >\n//           Sign out\n//         </button>\n//       </p>\n//     ) : (\n//       <p>You are not logged in. Please Register First.</p>\n//     )\n// );\n\n// function PrivateRoute({ component: Component, ...rest }) {\n//   return (\n//     <Route\n//       {...rest}\n//       render={props =>\n//         requestAuth.isAuthenticated ? (\n//           <Component {...props} />\n//         ) : (\n//           <Redirect\n//             to={{\n//               pathname: \"/login\",\n//               state: { from: props.location }\n//             }}\n//           />\n//         )\n//       }\n//     />\n//   );\n// }\n\n// function Public() {\n//   return <h3>Public</h3>;\n// }\n\n// function Protected() {\n//   return <h3>Protected</h3>;\n// }\n\n// class Login extends Component {\n//   state = { redirectToReferrer: false };\n\n//   login = () => {\n//     requestAuth.authenticate(() => {\n//       this.setState({ redirectToReferrer: true });\n//     });\n//   };\n\n//   render() {\n//     let { from } = this.props.location.state || { from: { pathname: \"/\" } };\n//     let { redirectToReferrer } = this.state;\n\n//     if (redirectToReferrer) return <Redirect to={from} />;\n\n//     return (\n//       <div>\n//         <p>You must log in to view the page at {from.pathname}</p>\n//         <button onClick={this.login}>Log in</button>\n//       </div>\n//     );\n//   }\n// }\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}
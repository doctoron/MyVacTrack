{"ast":null,"code":"var _defineProperty = require(\"/Users/ranton/bootcamp/sandbox/React_Projects/VacTRACK/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _module$exports;\n\nvar Member = require('../models/Members'); // Defining methods for the membrerConroller\n\n\nmodule.exports = (_module$exports = {\n  findAll: function findAll(req, res) {\n    Members.find(req.query).sort({\n      date: -1\n    }).then(function (dbModel) {\n      return res.json(dbModel);\n    }).catch(function (err) {\n      return res.status(422).json(err);\n    });\n  },\n  findOne: function findOne(req, res) {\n    Members.find({\n      username: req.body.email,\n      password: req.body.password\n    }).then(function (dbModel) {\n      return res.json(dbModel);\n    }).catch(function (err) {\n      return res.status(400).json({\n        msg: \"email/Password not found\"\n      });\n    });\n  },\n  findById: function findById(req, res) {\n    Members.findById(req.params.id).then(function (dbModel) {\n      return res.json(dbModel);\n    }).catch(function (err) {\n      return res.status(422).json(err);\n    });\n  }\n}, _defineProperty(_module$exports, \"findById\", function findById(req, res) {\n  Members.findById(req.params.id).then(function (dbModel) {\n    return res.json(dbModel);\n  }).catch(function (err) {\n    return res.status(422).json(err);\n  });\n}), _defineProperty(_module$exports, \"create\", function create(req, res) {\n  console.log('rea.body', req.body);\n  Members.create(req.body).then(function (dbModel) {\n    return res.json(dbModel);\n  }).catch(function (err) {\n    return console.log(err);\n  });\n}), _defineProperty(_module$exports, \"update\", function update(req, res) {\n  Members.findOneAndUpdate({\n    _id: req.params.id\n  }, req.body).then(function (dbModel) {\n    return res.json(dbModel);\n  }).catch(function (err) {\n    return res.status(422).json(err);\n  });\n}), _defineProperty(_module$exports, \"remove\", function remove(req, res) {\n  Members.findById({\n    _id: req.params.id\n  }).then(function (dbModel) {\n    return dbModel.remove();\n  }).then(function (dbModel) {\n    return res.json(dbModel);\n  }).catch(function (err) {\n    return res.status(422).json(err);\n  });\n}), _module$exports);","map":null,"metadata":{},"sourceType":"script"}
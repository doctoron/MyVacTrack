{"ast":null,"code":"var Users = require('../models/Users'); // Defining methods for the userController\n\n\nmodule.exports = {\n  // findAll: (req, res) => {\n  //     User\n  //         .find(req.query)\n  //         .sort({ date: -1 })\n  //         .then(dbModel => res.json(dbModel))\n  //         .catch(err => res.status(422).json(err));\n  // },\n  findUser: function findUser(req, res) {\n    console.log('Direct body coming in', req.body);\n    Users.find({\n      email: req.body.email,\n      password: req.body.password\n    }).then(function (data) {\n      console.log('This is what was returned', data);\n\n      if (!Array.isArray(data) || !data.length) {\n        return res.status(400).json({\n          msg: \"Email/Password combination not found\"\n        });\n      } else {\n        res.json(data);\n      }\n    }); // .then(data => {\n    //     )\n    // .catch(err => res.status(400).json(err));\n    // , function(err, user) {\n    //     console.log('the user', user);\n    //     if(err) {\n    //         return res.status(400).json({ msg: 'username/password is invalid'});\n    //     }\n    //     res.json(user);\n    // };\n  },\n  findById: function findById(req, res) {\n    Users.findById(req.params.id).then(function (dbModel) {\n      return res.json(dbModel);\n    }).catch(function (err) {\n      return res.status(422).json(err);\n    });\n  },\n  // findById: (req, res) => {\n  //     User\n  //         .findById(req.params.id)\n  //         .then(dbModel => res.json(dbModel))\n  //         .catch(err => res.status(422).json(err));\n  // },\n  create: function create(req, res) {\n    console.log('rea.body', req.body);\n    Users.create(req.body).then(function (dbModel) {\n      return res.json(dbModel);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  },\n  update: function update(req, res) {\n    Users.findOneAndUpdate({\n      _id: req.params.id\n    }, req.body).then(function (dbModel) {\n      return res.json(dbModel);\n    }).catch(function (err) {\n      return res.status(422).json(err);\n    });\n  },\n  remove: function remove(req, res) {\n    Users.findById({\n      _id: req.params.id\n    }).then(function (dbModel) {\n      return dbModel.remove();\n    }).then(function (dbModel) {\n      return res.json(dbModel);\n    }).catch(function (err) {\n      return res.status(422).json(err);\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"script"}